#+TITLE: Tasks/Notes/Ideas

* Tasks
    - [X] build maj/min chords
    - [X] figure out how to store rules for chords
    - [X] separate data for chords and scales into different module
    - [X] extract common parts of parser function for chords and scales
    - [X] rewrite as traits for data structs
    - [X] scale build as struct's method
    - [X] chord build as struct's method
    - [X] tests for chords parsing
    - [X] add more chords (dominant 7, Aminor 7, major 7, suspended 2nd, suspended 4th, diminished, augmented)
    - [X] make main engine as library
    - [X] README file
    - [X] new branch for workflows
    - [X] github workflows https://github.com/BamPeers/rust-ci-github-actions-workflow/
    - [X] tests for scale build
    - [X] tests for chord build
    - [X] test all possible maj/min scales
    - [X] replace Cb/Fb etc to their enharmonic equivalents for scales
    - [X] add codecov https://github.com/codecov/example-rust
    - [X] figure out how to handle Cbmaj/Fbmin etc. panics
    - [ ] split dependencies for library (nothing) and binary (clap)
    - [ ] release build for crates.io ?
    - [ ] rust docs for library
    - [ ] implement relative key calculation
    - [ ] command to print exotic scales
    - [ ] api from key struct. `key.nat_min().to_string()`
    - [ ] move tests out of scales rc
    - [ ] make releases as executables
    - [ ] setup code coverage on github
    - [ ] add exotic scales
    - [ ] frequencies for scales
    - [ ] manage theoretical scales
    - [ ] move constants to separate file
    - [ ] documentation using rustdoc
